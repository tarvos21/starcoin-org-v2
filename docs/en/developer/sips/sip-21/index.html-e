<!doctype html><html lang=en><head><meta charset=utf-8><meta content="width=device-width;initial-scale=1;maximum-scale=1;user-scalable=0" name=viewport><meta id=i18n_pagename content="index-common"><link rel=icon type=image/svg href=/img/stc.svg><link rel=stylesheet type=text/css href=/css/bootstrap.css><link rel=stylesheet href=/css/swiper-bundle.css><link rel=stylesheet type=text/css href=/css/nav.css><link rel=stylesheet type=text/css href=/css/nav_developer.css><link rel=stylesheet type=text/css href=/css/banner.css><link rel=stylesheet type=text/css href=/css/font_en.css><link rel=stylesheet type=text/css href=/css/footer.css><link rel=stylesheet type=text/css href=/css/developer.css><link rel=stylesheet type=text/css href=/css/markdown.css><script src=/js/jquery.min.js></script><script src=/js/bootstrap.min.js></script><script src=/js/swiper-bundle.min.js></script><script>(function(c,d){const b=196;function a(){const a=document.documentElement.clientWidth/1920,c=b*Math.min(a,2);document.documentElement.style.fontSize=c+'px'}a(),addEventListener('resize',a,!1)})(document,window)</script><script>$(document).ready(function(){a(),$(window).resize(function(){a()});function a(){window.innerWidth<=768?($(".m-d-title").css("width",document.body.clientWidth-30+'px'),$(".m-d-content").css("width",document.body.clientWidth-30+'px'),$(".developer").css("marginLeft","-221px")):($(".m-d-title").css("width","auto"),$(".m-d-content").css("width","auto"),$(".developer").css("marginLeft","auto"))}$("#developer_open_move").click(function(){$(this).parent().attr("class").indexOf("active")>-1?($(this).find(".icon img").attr("src","/img/icon_block.png"),$(this).parent().removeClass("active")):($(this).find(".icon img").attr("src","/img/icon_block_active.png"),$(this).parent().addClass("active"))}),$(".m_left_nav_click").click(function(){$(this).attr("state")==0?($(this).attr("state",1),$(".m_mask").show(),$(".m-column-drawer").animate({marginLeft:"100px"})):($(this).attr("state",0),$(".m_mask").hide(),$(".m-column-drawer").animate({marginLeft:"-212px"}))}),$(".m_mask").click(function(){$(this).hide(),$(".m_left_nav_click").attr("state",0),$(".m-column-drawer").animate({marginLeft:"-212px"})})})</script><title>[SIP21] Receipt Identifier | Starcoin</title></head><body><div class=hidden-xs><div class=header_top></div><div class="top scrollTop-nav"><div class=container><a href=/en><div class=logo><img src=/img/logo.png></div></a><div class="nav navClick"><div class="item Overview allSelect"><span class=i18n href=/en/>Overview</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/overview/technology_whitepaper/>Technology Whitepaper</a></div><div class=li><a class=i18n href=/en/overview/economy_whitepaper/>Economy Whitepaper</a></div></div></div></div><div class="item Guide allSelect"><span class=i18n>Learn</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/developer/tutorials/starcoin_wallet/>Starcoin Wallet</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starmask-extension/blob/main/docs/how-to-use.md',''),!1" href=javascript:void(0)>StarMask Chrome Wallet</a></div><div class=li><a class=i18n href=/en/developer/cli/mint/>Node Mining</a></div><div class=li><a class=i18n href=/en/developer/cli/>Node Command</a></div></div></div></div><div class="item Developer allSelect"><span class=i18n>Developer</span><div class=more_nav><div class=box><div class=li><span class=i18n>Node</span><div class=second_nav><div class=li><a class=i18n href=/en/developer/key_concepts/concept>Key Concept</a></div><div class=li><a class=i18n href=/en/developer/rpc/rpc_document/>RPC Protocol & APIs</a></div><div class=li><a class=i18n href=/en/developer/sips/>SIPs</a></div><div class=li><a class=i18n href=/en/developer/sdk/>SDK</a></div></div></div><div class=li><span class=i18n>Move</span><div class=second_nav><div class=li><a class=i18n onclick="return window.open('https://move-book.com/cn/index.html',''),!1" href=javascript:void(0)>Move Book</a></div><div class=li><a class=i18n onclick="return window.open(' https://github.com/starcoinorg/starcoin/blob/master/vm/move-cli/README.md',''),!1" href=javascript:void(0)>Move IDE</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/blob/master/vm/move-cli/README.zh.md',''),!1" href=javascript:void(0)>Move CLI</a></div><div class=li><a class=i18n href=/en/developer/move/example>Move Examples</a></div></div></div><div class=li><span class=i18n>Stratum Pool Guide</span><div class=second_nav><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/discussions/2541',''),!1" href=javascript:void(0)>Stratum Pool Guide</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/blob/b47429fc792fe9fabd1587fa60a9cae249f0b67f/stratum/stratum_mining_protocol.md',''),!1" href=javascript:void(0)>Stratum mining protocol</a></div></div></div><div class=li><a class=i18n href=/en/developer/>More</a></div></div></div></div><div class="item Community allSelect"><span class=i18n>Community</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/news/>News</a></div><div class=li><a class=i18n onclick="return window.open('http://westar.io',''),!1" href=javascript:void(0)>Westar Lab</a></div><div class=li><a class=i18n onclick="return window.open('https://www.movelang.io',''),!1" href=javascript:void(0)>Move Chinese Community</a></div></div></div></div><div class="item About allSelect"><a class=i18n href=/en/about><span class=i18n>About</span></a></div></div><div class="language p-language"><span language=en>English</span>｜<span language=zh>中文</span></div></div></div></div><div class=visible-xs style=display:block><div class="header_top m_header_top"></div><div class="top m_top scrollTop-nav"><div class="container m_container"><a href=/><div class=m_logo><img src=/img/logo.png></div></a><div class="m_nav m_nav_tap"><img src=/img/m_nav_more.png></div></div></div><div class=m_nav_model><div class="nav navClick m_nav_navigation"><div class="item Overview allSelect"><span class=i18n href=/en/>Overview</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/overview/technology_whitepaper/>Technology Whitepaper</a></div><div class=li><a class=i18n href=/en/overview/economy_whitepaper/>Economy Whitepaper</a></div></div></div></div><div class="item Guide allSelect"><span class=i18n>Learn</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/developer/tutorials/starcoin_wallet/>Starcoin Wallet</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starmask-extension/blob/main/docs/how-to-use.md',''),!1" href=javascript:void(0)>StarMask Chrome Wallet</a></div><div class=li><a class=i18n href=/en/developer/cli/mint/>Node Mining</a></div><div class=li><a class=i18n href=/en/developer/cli/>Node Command</a></div></div></div></div><div class="item Developer allSelect"><span class=i18n>Developer</span><div class=more_nav><div class=box><div class=li><span class=i18n>Node</span><div class=second_nav><div class=li><a class=i18n href=/en/developer/key_concepts/concept>Key Concept</a></div><div class=li><a class=i18n href=/en/developer/rpc/rpc_document/>RPC Protocol & APIs</a></div><div class=li><a class=i18n href=/en/developer/sips/>SIPs</a></div><div class=li><a class=i18n href=/en/developer/sdk/>SDK</a></div></div></div><div class=li><span class=i18n>Move</span><div class=second_nav><div class=li><a class=i18n onclick="return window.open('https://move-book.com/cn/index.html',''),!1" href=javascript:void(0)>Move Book</a></div><div class=li><a class=i18n onclick="return window.open(' https://github.com/starcoinorg/starcoin/blob/master/vm/move-cli/README.md',''),!1" href=javascript:void(0)>Move IDE</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/blob/master/vm/move-cli/README.zh.md',''),!1" href=javascript:void(0)>Move CLI</a></div><div class=li><a class=i18n href=/en/developer/move/example>Move Examples</a></div></div></div><div class=li><span class=i18n>Stratum Pool Guide</span><div class=second_nav><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/discussions/2541',''),!1" href=javascript:void(0)>Stratum Pool Guide</a></div><div class=li><a class=i18n onclick="return window.open('https://github.com/starcoinorg/starcoin/blob/b47429fc792fe9fabd1587fa60a9cae249f0b67f/stratum/stratum_mining_protocol.md',''),!1" href=javascript:void(0)>Stratum mining protocol</a></div></div></div><div class=li><a class=i18n href=/en/developer/>More</a></div></div></div></div><div class="item Community allSelect"><span class=i18n>Community</span><div class=more_nav><div class=box><div class=li><a class=i18n href=/en/news/>News</a></div><div class=li><a class=i18n onclick="return window.open('http://westar.io',''),!1" href=javascript:void(0)>Westar Lab</a></div><div class=li><a class=i18n onclick="return window.open('https://www.movelang.io',''),!1" href=javascript:void(0)>Move Chinese Community</a></div></div></div></div><div class="item About allSelect"><a class=i18n href=/en/about><span class=i18n>About</span></a></div></div><div class=m-language><div language=zh class=item>中文<div class=line></div></div><div language=en class=item>English</div></div></div><div class=clearfix></div></div><script>$(document).ready(function(){const a=JSON.parse(localStorage.getItem('navActive'))||0;$(".navClick .item")[a].classList.add('navActive'),$(".p-language span, .m-language .item").click(function(){let a=window.location.href,b=$(this).attr('language'),c="en";c!==b&&(a=a.replace(`/${c}/`,`/${b}/`),window.location.href=a)}),$(".navClick .item").click(function(){let b=$(this)[0]||null;if(b){b.classList.add('navActive');let e=[],d=b.parentNode.children;for(var a=0,c=d.length;a<c;a++)d[a]!==b?e.push(d[a]):localStorage.setItem('navActive',a);e.forEach(a=>{a.classList.remove('navActive')})}$(this).attr("href")&&window.open($(this).attr("href"),"_self")}),$(".more_nav .box .li").click(function(){$(this).attr("href")&&window.open($(this).attr("href"),"_self")}),$(".m_nav_navigation").find(".allSelect").click(function(){$(this).attr("class").indexOf("m_tab_select")>-1?(console.log($(this)),$(this).removeClass("m_tab_select")):$(this).addClass("m_tab_select")}),$(".m_nav_tap").click(function(){$(this).find("img").attr("src")=="/img/m_nav_more.png"?($(this).find("img").attr("src","/img/m_nav_close.png"),$(".m_nav_model").show(),$(".m_nav_model").animate({height:"100%"}),$(".scrollTop-nav").addClass("home-nav")):($(this).find("img").attr("src","/img/m_nav_more.png"),$(".scrollTop-nav").removeClass("home-nav"),$(".m_nav_model").animate({height:"0%"}),$(".m_nav_model").hide())})})</script><link rel=stylesheet href=/css/news.css><div class=container><div class=news><div class=news_list><div class="tile is-child box"><div class=content><div class=content-title><h1 class="title is-size-1">[SIP21] Receipt Identifier</h1></div>Published at January 1, 0001 By @lerencao.<hr style="margin:5px 0 10px"><h2 id=receipt-identifier>Receipt Identifier</h2><p>For communicating account identity of payee, we propose using a compact, versioned and case-insensitive identifier. To meet this criteria, we selected the Bech32 encoding implementation used in Bitcoin Segwit (BIP 0173) excluding the Segwit byte known-length restrictions.</p><h2 id=desired-attributes>Desired attributes</h2><ul><li>Consistent - Users can build a muscle memory for identifying and using these account addresses</li><li>Atomic - The string identifier feels like a single unit. Users shouldn’t try to separate or truncate the string</li><li>Versioned - The format contains human readable information about how to interpret the payload, preventing subtle errors and reserving space for future identifier schemes</li><li>Error detecting - Bech32 checksums help clients validate input and reduce risk of bad transactions due to mistypings and truncations</li></ul><h2 id=format>Format</h2><p>The Receipt Identifier consists of</p><ol><li>A prefix (also known as hrp (human readable part) which identifies the network version this address is intended for: “stc” for Starcoin Network.</li><li>A Bech32 delimiter: The character “1” (one)</li><li>A Bech32 version identifier: The character “p” (version = 1).</li><li>A Bech32 encoded payload. For version 1, is Starcoin account address + optional auth key (16 + 32 bytes)</li><li>The last 6 characters correspond to the Bech32 checksum</li></ol><p>The Receipt Identifier shall not be mixed-cases. It shall be all uppercases, or all lowercases. For example, st1pu9w0v6vny0hnv2kvhzkh6fwvq5xut42wh8tukg3ra3vy7m6g2al5y4253sm4svf3npwqjevdcssyyse3v94v or ST1PU9W0V6VNY0HNV2KVHZKH6FWVQ5XUT42WH8TUKG3RA3VY7M6G2AL5Y4253SM4SVF3NPWQJEVDCSSYYSE3V94V are valid but st1PU9w0V6vny0HNV2KVHZKH6FWVQ5XUT42WH8TUKG3RA3VY7M6G2AL5Y4253SM4SVF3NPWQJEVDCSSYYSE3V94V is not.</p><p>Overall address format: prefix | delimiter | version | encoded payload | checksum</p><p>Identifier information</p><p>Prefix (string)
Network: stc
Address type (version prefix): 01 (letter p in Bech32 alphabet)
Address payload (in hex)
Address: 0x1603d10ce8649663e4e5a757a8681833
AuthKey: 0x93dcc435cfca2dcf3bf44e9948f1f6a98e66a1f1b114a4b8a37ea16e12beeb6d
Checksum: 3mmwta
Result: stc1pzcpazr8gvjtx8e895at6s6qcxwfae3p4el9zmnem738fjj83765cue4p7xc3ff9c5dl2zmsjhm4k63mmwta</p><h2 id=looking-ahead>Looking ahead</h2><p>In the future, we plan to define additional Receipt Identifier versions to support other forms of identity, such as more compact formats. These would leverage a similar overall structure but would have a different version identifier, preventing naming collisions.</p><h3 id=basic-implementation-in-rust>Basic implementation in Rust</h3><div class=highlight><pre style=color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4><code class=language-rust data-lang=rust>    <span style=color:#75715e>#[derive(Copy, Clone, Debug)]</span>
    <span style=color:#66d9ef>pub</span> <span style=color:#66d9ef>enum</span> <span style=color:#a6e22e>ReceiptIdentifier</span> {
        V1(AccountAddress, Option<span style=color:#f92672>&lt;</span>AuthenticationKey<span style=color:#f92672>&gt;</span>),
    }

    <span style=color:#66d9ef>impl</span> FromStr <span style=color:#66d9ef>for</span> ReceiptIdentifier {
        <span style=color:#66d9ef>type</span> Err <span style=color:#f92672>=</span> anyhow::Error;

        <span style=color:#66d9ef>fn</span> <span style=color:#a6e22e>from_str</span>(s: <span style=color:#66d9ef>&amp;</span><span style=color:#66d9ef>str</span>) -&gt; Result<span style=color:#f92672>&lt;</span>Self, Self::Err<span style=color:#f92672>&gt;</span> {
            Self::decode(s)
        }
    }
    <span style=color:#66d9ef>impl</span> std::fmt::Display <span style=color:#66d9ef>for</span> ReceiptIdentifier {
        <span style=color:#66d9ef>fn</span> <span style=color:#a6e22e>fmt</span>(<span style=color:#f92672>&amp;</span>self, f: <span style=color:#66d9ef>&amp;</span><span style=color:#a6e22e>mut</span> Formatter<span style=color:#f92672>&lt;</span><span style=color:#a6e22e>&#39;_</span><span style=color:#f92672>&gt;</span>) -&gt; <span style=color:#a6e22e>std</span>::fmt::Result {
            write<span style=color:#f92672>!</span>(f, <span style=color:#e6db74>&#34;{}&#34;</span>, self.encode())
        }
    }

    <span style=color:#66d9ef>impl</span> ReceiptIdentifier {
        <span style=color:#66d9ef>pub</span> <span style=color:#66d9ef>fn</span> <span style=color:#a6e22e>encode</span>(<span style=color:#f92672>&amp;</span>self) -&gt; String {
            <span style=color:#66d9ef>match</span> self {
                ReceiptIdentifier::V1(address, auth_key) <span style=color:#f92672>=&gt;</span> {
                    <span style=color:#66d9ef>let</span> <span style=color:#66d9ef>mut</span> data <span style=color:#f92672>=</span> vec<span style=color:#f92672>!</span>[];
                    data.append(address.to_vec().as_mut());
                    <span style=color:#66d9ef>if</span> <span style=color:#66d9ef>let</span> Some(auth_key) <span style=color:#f92672>=</span> auth_key {
                        data.append(auth_key.to_vec().as_mut());
                    }

                    <span style=color:#66d9ef>let</span> <span style=color:#66d9ef>mut</span> data <span style=color:#f92672>=</span> data.to_base32();
                    data.insert(<span style=color:#ae81ff>0</span>, bech32::u5::try_from_u8(<span style=color:#ae81ff>1</span>).unwrap());
                    bech32::encode(<span style=color:#e6db74>&#34;stc&#34;</span>, data, bech32::Variant::Bech32).unwrap()
                }
            }
        }
        <span style=color:#66d9ef>pub</span> <span style=color:#66d9ef>fn</span> <span style=color:#a6e22e>decode</span>(s: <span style=color:#a6e22e>impl</span> AsRef<span style=color:#f92672>&lt;</span><span style=color:#66d9ef>str</span><span style=color:#f92672>&gt;</span>) -&gt; Result<span style=color:#f92672>&lt;</span>ReceiptIdentifier<span style=color:#f92672>&gt;</span> {
            <span style=color:#66d9ef>let</span> (hrp, data, variant) <span style=color:#f92672>=</span> bech32::decode(s.as_ref()).unwrap();

            anyhow::ensure<span style=color:#f92672>!</span>(variant <span style=color:#f92672>==</span> bech32::Variant::Bech32, <span style=color:#e6db74>&#34;expect bech32 encoding&#34;</span>);
            anyhow::ensure<span style=color:#f92672>!</span>(hrp.as_str() <span style=color:#f92672>==</span> <span style=color:#e6db74>&#34;stc&#34;</span>, <span style=color:#e6db74>&#34;expect bech32 hrp to be stc&#34;</span>);

            <span style=color:#66d9ef>let</span> version <span style=color:#f92672>=</span> data.first().map(<span style=color:#f92672>|</span>u<span style=color:#f92672>|</span> u.to_u8());
            anyhow::ensure<span style=color:#f92672>!</span>(version.filter(<span style=color:#f92672>|</span>v<span style=color:#f92672>|</span> <span style=color:#f92672>*</span>v <span style=color:#f92672>==</span> <span style=color:#ae81ff>1</span><span style=color:#66d9ef>u8</span>).is_some(), <span style=color:#e6db74>&#34;expect version 1&#34;</span>);

            <span style=color:#66d9ef>let</span> data: Vec<span style=color:#f92672>&lt;</span><span style=color:#66d9ef>u8</span><span style=color:#f92672>&gt;</span> <span style=color:#f92672>=</span> bech32::FromBase32::from_base32(<span style=color:#f92672>&amp;</span>data[<span style=color:#ae81ff>1</span>..])<span style=color:#f92672>?</span>;

            <span style=color:#66d9ef>let</span> (address, auth_key) <span style=color:#f92672>=</span> <span style=color:#66d9ef>if</span> data.len() <span style=color:#f92672>==</span> AccountAddress::LENGTH {
                (AccountAddress::from_bytes(data.as_slice())<span style=color:#f92672>?</span>, None)
            } <span style=color:#66d9ef>else</span> <span style=color:#66d9ef>if</span> data.len() <span style=color:#f92672>==</span> AccountAddress::LENGTH <span style=color:#f92672>+</span> AuthenticationKey::LENGTH {
                <span style=color:#66d9ef>let</span> address <span style=color:#f92672>=</span> AccountAddress::from_bytes(<span style=color:#f92672>&amp;</span>data[<span style=color:#ae81ff>0</span>..AccountAddress::LENGTH])<span style=color:#f92672>?</span>;
                <span style=color:#66d9ef>let</span> auth_key <span style=color:#f92672>=</span> AuthenticationKey::try_from(<span style=color:#f92672>&amp;</span>data[AccountAddress::LENGTH..])<span style=color:#f92672>?</span>;
                (address, Some(auth_key))
            } <span style=color:#66d9ef>else</span> {
                anyhow::bail<span style=color:#f92672>!</span>(<span style=color:#e6db74>&#34;invalid data&#34;</span>);
            };
            Ok(ReceiptIdentifier::V1(address, auth_key))
        }
    }
    <span style=color:#75715e>#[test]</span>
    <span style=color:#66d9ef>pub</span> <span style=color:#66d9ef>fn</span> <span style=color:#a6e22e>test_rust_bench32</span>() {
        <span style=color:#66d9ef>let</span> address <span style=color:#f92672>=</span> AccountAddress::random();
        <span style=color:#66d9ef>let</span> auth_key <span style=color:#f92672>=</span> AuthenticationKey::random();

        <span style=color:#66d9ef>let</span> encoded <span style=color:#f92672>=</span> ReceiptIdentifier::V1(address, Some(auth_key)).to_string();
        println<span style=color:#f92672>!</span>(
            <span style=color:#e6db74>&#34;address: {}, auth_key: {}, id: {}&#34;</span>,
            address, auth_key, <span style=color:#f92672>&amp;</span>encoded
        );

        <span style=color:#66d9ef>let</span> id <span style=color:#f92672>=</span> ReceiptIdentifier::from_str(encoded.as_str()).unwrap();
        <span style=color:#66d9ef>match</span> id {
            ReceiptIdentifier::V1(decoded_address, decoded_auth_key) <span style=color:#f92672>=&gt;</span> {
                assert_eq<span style=color:#f92672>!</span>(decoded_address, address);
                assert_eq<span style=color:#f92672>!</span>(decoded_auth_key, Some(auth_key));
            }
        }
    }    
</code></pre></div></div></div></div><div class=news_right><div class=right_card><div class=right-column><div class=column_title><span>Tags</span></div></div><div class=column_list><div class=item><a href=/en/tags/competition>competition</a></div><div class=item><a href=/en/tags/epoch>epoch</a></div><div class=item><a href=/en/tags/mining>mining</a></div><div class=item><a href=/en/tags/release>release</a></div><div class=item><a href=/en/tags/security>security</a></div><div class=item><a href=/en/tags/starcoin>starcoin</a></div><div class=item><a href=/en/tags/testnet>testnet</a></div></div></div><div class=right_card><div class="right-column margin-top"><div class=column_title><span>Recent posts</span></div></div><div class=posts_list><ul><li><a href=https://starcoin-org.git.xin/en/news/post/starcoin_stdlib_upgrade_v5_finished/>Starcoin Move stdlib v5 upgrade completed</a><p><time class="has-text-grey-light is-size-7">17 June 2021</time></p></li><li><a href=https://starcoin-org.git.xin/en/news/post/starcoin_stdlib_upgrade_v5_poll_pass/>Starcoin Move stdlib upgrade voting is end，will be executed in 24 hours</a><p><time class="has-text-grey-light is-size-7">15 June 2021</time></p></li><li><a href=https://starcoin-org.git.xin/en/news/post/starcoin_stdlib_upgrade_v5/>Starcoin Move stdlib upgrade voting is open</a><p><time class="has-text-grey-light is-size-7">8 June 2021</time></p></li><li><a href=https://starcoin-org.git.xin/en/news/post/release_starcoin_v1.0.0/>Starcoin released v1.0, the mainnet has launched</a><p><time class="has-text-grey-light is-size-7">18 May 2021</time></p></li><li><a href=https://starcoin-org.git.xin/en/news/post/release_starcoin_v1.0.0-rc/>Starcoin released v1.0.0-rc, the mainnet will be launched at the height of 310000 in the Barnard network</a><p><time class="has-text-grey-light is-size-7">17 May 2021</time></p></li></ul></div></div><div class=right_card><div class="right-column margin-top"><div class=column_title><span>Archives</span></div></div><div class=date_list><div class=item><a href=/en/archives/2021>2021</a>（7）</div><div class=item><a href=/en/archives/2020>2020</a>（7）</div></div></div></div></div></div><div class="footer visible-lg"><div class=container><div class="row hr"><div class="col-md-4 item">Contact Us</div><div class="col-md-4 item">Technology</div><div class="col-md-4 item">Community</div></div><div class="row td"><div class="col-md-4 item">WeChat Public Account: Starcoin区块链</div><div class="col-md-4 item"><a target=_blank href="https://chrome.google.com/webstore/detail/starmask/mfhbebgoclkghebffdldpobeajmbecfk?hl=zh-CN">StarMask Wallet</a></div><div class="col-md-4 item"><a target=_blank href=https://starcoin.org/en/news/>News</a></div></div><div class="row td"><div class="col-md-4 item">Twitter: <a target=_blank href=https://twitter.com/starcoinstc>StarcoinSTC</a></div><div class="col-md-4 item"><a target=_blank href=https://explorer.starcoin.org>Blockchain Explorer</a></div><div class="col-md-4 item"><a target=_blank href=https://westar.io>Westar Lab</a></div></div><div class="row td"><div class="col-md-4 item">Join WeChat Group: starcoinorg</div><div class="col-md-4 item"><a target=_blank href=https://starcoin.org/en/developer/>Developer Docs</a></div><div class="col-md-4 item"><a target=_blank href=https://www.movelang.io>Move Chinese Community</a></div></div><div class="row td"><div class="col-md-4 item">Discord: <a target=_blank href=https://discord.gg/96tKt5exaE>Starcoin Spaceship</a></div><div class="col-md-4 item"><a target=_blank href=https://starcoin.org/en/developer/sdk/>SDK</a></div><div class="col-md-4 item"><a target=_blank href=https://github.com/starcoinorg/starcoin/discussions>GitHub Discussion</a></div></div><div class=foot><div class=copyright>© 2018-2021 Starcoin.org All Rights Reserved.</div></div></div></div><div class="m-footer visible-xs visible-sm visible-md"><div class=container><div class=go-contact-us>Contact Us<img src=/img/r-arrow.png></div><div class=row-li><div class=item>WeChat Public Account: Starcoin区块链</div><div class=item>Join WeChat Group: starcoinorg</div></div><div class=row-li><div class=item>Twitter: <a target=_blank href=https://twitter.com/starcoinstc>StarcoinSTC</a></div><div class=item>Discord: <a target=_blank href=https://discord.gg/96tKt5exaE>Starcoin Spaceship</a></div></div><div class=go-contact-us>Technology<img src=/img/r-arrow.png></div><div class=row-li><div class=item><a target=_blank href="https://chrome.google.com/webstore/detail/starmask/mfhbebgoclkghebffdldpobeajmbecfk?hl=zh-CN">StarMask Wallet</a></div><div class=item><a target=_blank href=https://explorer.starcoin.org>Blockchain Explorer</a></div></div><div class=row-li><div class=item><a target=_blank href=https://starcoin.org/en/developer/>Developer Docs</a></div><div class=item><a target=_blank href=https://starcoin.org/en/developer/sdk/>SDK</a></div></div><div class=go-contact-us>Community<img src=/img/r-arrow.png></div><div class=row-li><div class=item><a target=_blank href=https://starcoin.org/en/news/>News</a></div><div class=item><a target=_blank href=https://westar.io>Westar Lab</a></div></div><div class=row-li><div class=item><a target=_blank href=https://www.movelang.io>Move Chinese Community</a></div><div class=item><a target=_blank href=https://github.com/starcoinorg/starcoin/discussions>GitHub Discussion</a></div></div><div class=crt>© 2018-2021 Starcoin.org All Rights Reserved.</div></div></div></body></html>