<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SIPs on Starcoin</title><link>https://starcoin-org.git.xin/zh/developer/sips/</link><description>Recent content in SIPs on Starcoin</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://starcoin-org.git.xin/zh/developer/sips/index.xml" rel="self" type="application/rss+xml"/><item><title>[SIP1] SIP 提案指南</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-1/</guid><description>SIP 提案指南</description></item><item><title>[SIP2] 技术白皮书</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-2/</guid><description>Starcoin, 一个分层智能合约及去中心化金融网络 摘要：Starcoin 是一个去中心化分层智能合约网络，它旨在提供一种安全的数字资产及去中心化金融运行平台，让区块链能够更低门槛应用在更多领域。我们提出了一个分层区块链模型的建议，旨在创建一个数字资产安全、并能达到性能及可扩展的目标。安全是区块链立身之本，Starcoin 从设计之初就把安全作为首要目标，从基础层、共识层、协议层、扩展层、应用层等多层面进行深度探索与改进，全力保障主链和数字资产的安全。
为了达到去中心化的目的，Starcoin 选择成熟的中本聪共识算法，并在其基础上进行增强，可以动态适应网络算力状态，达到链上性能及稳定性的平衡。交易是基于智能合约来运行，使用一种名为 Move 的编程语言。我们使用 Move 来定义区块链的核心机制，如数字资产和 DAO 治理规则。这些核心机制能够创建一个独特的去中心化治理机制。
为了验证 Starcoin 整体设计，我们已经构建了一个开源的原型实现。
简介 Starcoin 是新一代的区块链公链基础设施，是一个分层的，去中心化的区块链系统。
Starcoin 一层专注于提供数字资产基本能力，能够安全快速的定义资产，并通过智能合约灵活地实现资产转移交换等能力。
Starcoin 二层专注于解决资产转移交换等过程中的扩展性和性能问题。由于 Starcoin 的特殊设计，Starcoin 二层可以使用一层的数据，一层也可以校验二层的运算结果，一层二层有机结合在一起，资产可以在一二层之间自由流动。
长久以来，区块链系统存在所谓的区块链不可能三角，即无法同时达到可扩展（Scalability）、去中心化（Decentralization）、安全（Security），三者只能得其二。
比特币以及以太坊便是一种追求“去中心化”与“安全”的技术组合，而不追求可扩展。其他区块链项目也都是在这三者之间进行选择。而三者只选择其二的做法，很大程度上难以满足商业使用的需求。
Starcoin 试图通过区块链分层技术，在区块链一层达到去中心化和安全，通过区块链二层达到很大的可扩展性，达到可以供商业使用的程度。因此可以说 Starcoin 试图通过紧密结合的区块链一层二层来打破区块链不可能三角。
设计理念 以价值流转为中心 —— 所有的分层以及周边功能的改进都是以促进价值流转为中心目标。 共识分层治理 —— 不是所有的认知都需要全局共识，共识也需要分层。越底层越侧重于安全和去中心化，越上层越侧重于性能和便利性。 技术创造可能，社区决定取舍 —— 尽量通过技术消弭分歧，创造可能，保持技术中立，价值观层面的的选择和取舍留给社区决定。 接下来从 6 个方面来介绍 Starcoin 的设计。
1. 增强的中本聪共识协议 Starcoin 共识是一种比特币中本聪共识的增强版本。为了加快出块速度和降低交易确认时间，我们引入叔块率等运行期数据，对出块时间，难度，出块奖励进行动态调整，可以最大限度利用网络，减少用户等待时间。此外，我们还提供了区块链的动态调整能力，一些关键参数通过链上治理机制来实现配置修改。
中本聪共识最早由比特币采用，也是区块链早期广泛使用的一种共识方法 [1]。目前为止中本聪共识是容错能力最好的公有链共识机制，其设计简单，通讯开销低，经过了数十年的验证。但是其吞吐能力较低，出块时间过长，用户体验较差。因此，我们选择了对中本聪共识进行加强，使得 Starcoin 具备以下的特性：
动态调整出块速度以及区块大小，在安全，网络吞吐，用户体验之间寻求平衡。 共识相关的参数可通过社区治理，经合约升级。 引入叔块 中本聪共识中，要提高网络吞吐，可以通过 (1) 增加区块大小，或 (2) 缩短出块间隔。这两种办法都会增大网络中竞争块出现的概率。而这些竞争块中，最多只有一个区块能够进入主链，为打包交易提升吞吐作出贡献，而其他块则成为孤块。区块越大，出块时间越短，孤块会越多，而孤块率增加会降低双花攻击的难度，所以我们需要将孤块率限制在一个阈值之内。
我们在孤块基础上，引入叔块概念。首先，定义每 N 个块为一个 Epoch。当满足如下条时，则定义区块 B2 为 B1 的叔块：</description></item><item><title>[SIP3] 经济模型</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-3/</guid><description>Starcoin 经济白皮书 STC 是 Starcoin 网络的原生 Token，发行总量为 3,185,136,000 STC，总量恒定。
它的当前的主要用途有：
支付交易的 gas 费用。 支付状态空间费用（未来状态计费机制激活以后）。 用于链上治理投票。 未来，随着链上生态的成熟，STC 将会有越来越多的使用场景。
Token 创世分发 在 Starcoin 上，所有的 Token 都是链上一等公民，所以 STC 也符合 Starcoin 的 Token 规范。每一种 Token 创建后，发行账号会得到铸币权，拥有铸币权的账号可以铸造该 Token。
STC 的发行账号是 0x1 这个创世账号，该账号只用在创世交易以及区块的 meta 交易执行（类似于 Bitcoin 的 coinbase 交易）。创世交易中，创世账号会一次性将所有的 STC 铸造出来，并存到国库中，然后销毁铸币权，保证 STC 不能增发。
然后执行以下操作：
将 159,256,800 STC （5%）提取出来，转给 Starcoin 基金会账号（0xA550C18），用于分配给早期投资人。 发行一个总额度为 255,129,390 STC （8%），释放周期为 3 年的线性提款权，归属 Starcoin 基金会，用于生态建设。 发行一个总额度为 222,641,010 STC （7%），释放周期为 3 年的线性提款权，归属 Starcoin 基金会，用于核心项目开发。 将国库的提款权锁定到 DAO 中，以后从国库提款只能通过链上治理进行。 注：线性提款权只是一种凭据，转让的时候并没有发生 Token 的转移。拥有者可以定期从国库将提款权中已经线性释放的部分提取出来。</description></item><item><title>[SIP4] SIP 作为特性开关</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-4/</guid><description>SIP 作为特性开关 动机 区块链上的协议如果需要升级，并且无法与旧的版本兼容，也是大家常说的『硬分叉』升级，通常的做法是通过高度设置一个特性开关(feature flag)，约定好在某个高度激活该升级。但这种方式面临几个挑战：
代码要合并进主分支的时候，就需要确定一个激活的高度，如果社区对是否支持该特性，以及激活时间不能达成一致，则会导致该特性的代码一直不能合并进入主代码分支，无法进入版本发布流程。 代码合并进入主分支并发布版本后，到激活高度这段时间，是留给矿工（或者验证者）的&amp;quot;投票&amp;quot;时间，矿工通过是否升级来进行投票。如果大多数算力的矿工决定不升级，则会导致链分叉为两条。 按照 Starcoin 白皮书中的治理设计原则『技术创造可能，社区决定取舍』，我们对链上的协议升级做出了改进，通过链上的特性开关机制和 DAO 来实现不兼容性协议升级。
技术方案 定义一个链上的 SIP module，并提供判断方法来检测该 Module 是否存在，如果存在则认为改 SIP 已经激活。对 Feature Flag 的投票按照 stdlib 升级流程即可。
address 0x1{ module SIP_2{ } module SIP_2{ } } 在链的代码框架中提供简便的方法来根据链的状态判断某个 SIP 是否激活。
trait StateReader { is_activated(sip: SIP): bool; } 升级流程 用户或者社区开发者提出需要升级的特性需求，并提交 SIP 提案。 核心开发者从技术角度评估该 SIP 并决定是否接受。 接受的 SIP 进入开发流程，开发测试完成后，需要合并到主代码分支的时候，核心开发者只需要通过以下角度进行评估： 实现的特性是否和 SIP 的目标相符。 新的逻辑是否被特性开关控制，是否会影响旧的逻辑。 是否满足技术性指标：比如性能，可维护性等。 合并之后，新的版本中就会携带该特性的逻辑，但处于未激活状态，矿工正常升级即可。 发起一次 stdlib 升级提案，该 stdlib 的版本中定义新的 SIP 的 flag Module, 呼吁社区进行投票，决定是否激活改特性， 以及激活的时间。 投票通过，升级 stdlib， flag Module 写入链上，特性开关生效，全网启用新特性。 投票未通过，该特性将一直处于未激活状态，等待必要的时候清理。 期望效果 加速功能以及版本的迭代速度，让争议后置处理。实现『技术创造可能，社区决定取舍』的目标。</description></item><item><title>[SIP4] 引入国库机制，让链的发展可持续</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-5/</guid><description>引入国库机制，让链的发展可持续 背景与动机 国库是一个和 DAO 关联起来的资金库，可以通过治理机制支配其中的资金。当前 Starcoin 的经济模型中，预留了一部分固定的生态基金的 Token 额度，用于发展生态，但固定额度的生态基金有可持续问题。另外通过 PoW 分发的 Token，如果分发完之后，链如何运转，也尚未有明确答案。
所以这个提案中建议引入国库 (Treasury) 机制，为链的可持续的生态系统打好基础，同时也给 DAO 系统补上了不可或缺的一环。
方案 STC 总量恒定，在创世块中一次性铸造出来锁到国库中，并销毁铸造能力。 国库中的的 STC 支取需要通过链上的治理机制进行决策。 PoW 矿工奖励也从国库中提取，出块奖励的基础额度通过链上治理机进行调整。 如果 STC 国库没有余额，则出块无奖励。 链的生态k可以创造一些收益，并注入国库。 经济模型解释 当前的 PoW 公链，PoW 既是保证安全的一种共识机制，也是 Token 的分发策略。PoW 链的经济模型中，Token 先分发给矿工，然后再流转到其他生态。
但这种模型对于 BTC 这样的以价值存储为目标的链来说，是可以形成生态闭环的，但对于智能合约链来说，Token 的价值依赖于链上的生态的繁荣，所以 Token 分发策略中应该向上层的生态应用倾斜，同时需要通过生态应用分发 Token，而不单纯通过矿工分发。
从长远来看，链上的基础生态收益，最后归入到国库中，国库资金如果最后可以覆盖未来的研发投入以及矿工奖励，说明链的经济模型实现了自举。
技术方案 定义一个链上的 Treasury, 这个 Treasury 是一个通用的模块，支持任意 Token，所以第三方 Token 也可以使用国库机制。 只有 Token 但 issuer 可以创造 Treasury.
module Treasury{ struct Treasury&amp;lt;TokenT&amp;gt; has store,key { balance: Token&amp;lt;TokenT&amp;gt;, /// event handle for treasury withdraw event withdraw_events: Event::EventHandle&amp;lt;WithdrawEvent&amp;gt;, /// event handle for treasury deposit event deposit_events: Event::EventHandle&amp;lt;DepositEvent&amp;gt;, } public fun deposit&amp;lt;TokenT:store&amp;gt;(token: Token&amp;lt;TokenT&amp;gt;) { // deposit token to Treasury } } 在当前的 DAO 系统中新增一种 TreasuryProposal, 通过 DAO 投票来决定国库资金的支配。</description></item><item><title>[SIP20] JSONRPC</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-20/</guid><description>统一 JSONRPC 接口的参数和返回值类型 目前 Starcoin 的 json rpc 接口返回值类型直接使用了内部的数据结构，比如 Block, Header, Transaction, TransactionInfo 等等。 但是在接口的实际使用过程中，这些内部结构的字段无法满足外部使用需求，往往是缺乏必要的关联字段，比如外部使用可能需要 TransactionInfo 里包含 txn 被打包的 block id，亦或是某个 u64 类型的字段序列化成 json 后，无法被 javascript 端的正确的解析出来。 为了解决诸如此类的问题，该 RFC 定义了一系列 jsonrpc 接口返回值类型，试图将内部使用的数据结构和对外接口的数据结构解耦。
类型定义 经过梳理，接口中使用的以下几类核心数据结构需要替换成自定义的对外返回的类型。
Block, 以及关联的 BlockHeader, BlockBody。 Transaction，以及关联的 RawUserTransaction，BlockMetadata 等。 TransactionInfo：Transaction 在链上的结果数据。 Transaction 在链上产生的 Events 数据。 以下部分列出了新的接口返回类型定义。
Block pub struct BlockView { pub header: BlockHeaderView, pub body: BlockTransactionsView, pub uncles: Vec&amp;lt;BlockHeaderView&amp;gt;, } pub struct BlockHeaderView { /// block hash pub block_hash: HashValue, /// Parent hash.</description></item><item><title>[SIP21] 收款识别码（Receipt Identifier）</title><link>https://starcoin-org.git.xin/zh/developer/sips/sip-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://starcoin-org.git.xin/zh/developer/sips/sip-21/</guid><description>收款识别码（Receipt Identifier） 参看英文版本文档 Receipt Identifier</description></item></channel></rss>